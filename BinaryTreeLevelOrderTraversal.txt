/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    /**
    Time Complexity - O(N)
    Space Complexity - O(N)
     */
    public List<List<Integer>> levelOrder(TreeNode root) {
        List<List<Integer>> results = new ArrayList<>();
        bfs(root, 0, results);
        return results;
    }

    private void bfs(TreeNode root, int height, List<List<Integer>> results) {
        if (root == null) {
            return;
        }
        if (height == results.size()) {
            results.add(new ArrayList<>());
        }
        results.get(height).add(root.val);
        bfs(root.left, height+1, results);
        bfs(root.right, height+1, results);
    } 

}
