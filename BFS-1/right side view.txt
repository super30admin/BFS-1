/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
// time complexity = O(n)
//space complexity = O(n)
// executed on leet code
class Solution {
    public List<Integer> rightSideView(TreeNode root) {
        List<Integer> l1=new ArrayList<>();
        if(root==null) return l1; 
        Queue<TreeNode> q1=new LinkedList<>();
        q1.add(root);
        while(q1.size()!=0) 
        {
            int x=q1.size();
            for(int i=0;i<x;i++) // remove that level elements and add next level elements
            {
                TreeNode temp=q1.remove();
                if(i==x-1) l1.add(temp.val); // to add the rightmost element into list    
                if(temp.left!=null) q1.add(temp.left);
                if(temp.right!=null) q1.add(temp.right);
            }
        }
        return l1;
    }
}