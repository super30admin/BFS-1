/**
Time O(n)
Space O(1)
Leetcode yes
problem no

We do the simple level order traversal. However add only the last node at each level to the solution because when we are standing
towards the right only the last node at each level will be visible.

 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<Integer> rightSideView(TreeNode root) {
        
        List<Integer> solution = new ArrayList<>();
        
        if(root == null)
            return solution;
        
        Queue<TreeNode> q = new LinkedList<>();
        q.add(root);
       
        while(q.size()!=0)
        {
            TreeNode temp;
            int size = q.size();
            
            for(int i=0;i< size;i++)
            {
                temp =q.poll();
                if(temp.left!=null)
                    q.add(temp.left);
                if(temp.right!=null)
                    q.add(temp.right);
                 
                 // Adding only the last node
                if( i == size -1)
                    solution.add(temp.val);
            }
        }
        
        return solution;
        
    }
}
