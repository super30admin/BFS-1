Time - O(N)
Space - O(N)

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        List<List<Integer>> list1 = new ArrayList<>();
        List<Integer> list2;

        if (root == null) {
            return list1;
        }

        Queue<TreeNode> queue = new LinkedList<>();
        queue.add(root);
        
        while(!queue.isEmpty()){

            int size = queue.size();
            list2 = new ArrayList<>();
            
            //process all the children of the node
            for(int i = 0; i < size; i++) {

                TreeNode data = queue.poll();
                list2.add(new Integer(data.val));
                
                //add children of the node to queue
                if(data.left != null){
                    queue.add(data.left);
                }
                if(data.right != null){
                    queue.add(data.right);
                }
            }
            list1.add(list2);

        }
        
        return list1;
    }
}
