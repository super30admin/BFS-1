Time complexity: O(mn)
Space complexity: O(mn)
Did this code submitted successfully on leetcode: Yes

class Solution {
    public boolean canFinish(int numCourses, int[][] prerequisites) {
        
        if (numCourses <= 0)
		    return false;
        
        int[] indegree = new int[numCourses];
        Queue<Integer> q = new LinkedList<>();
        
        for(int i=0;i<prerequisites.length;i++){
            indegree[prerequisites[i][1]]++;
        }
        
        for(int i=0;i<indegree.length;i++){
            if (indegree[i] == 0)
			q.offer(i);
        }
            
        while(!q.isEmpty()){
            int x = q.poll();

            for(int i=0;i<prerequisites.length;i++){
                if (x == prerequisites[i][0]) {
                    indegree[prerequisites[i][1]]--;
                    
                    if (indegree[prerequisites[i][1]] == 0)
                        q.offer(prerequisites[i][1]);
                    }
                }      
            }

        for (int i = 0; i < indegree.length; i++) {
            if (indegree[i] != 0)
                return false;
	    }
        
        return true;
    }
}
