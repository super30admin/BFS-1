/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        
        
        
        Queue<TreeNode> q1=new LinkedList<>();
        List<List<Integer>> result = new ArrayList<>();
        if(root == null)
           return result; 
        q1.add(root);
        
        while(!q1.isEmpty())
        {
            int size=q1.size();
            
            List currentlevel=new ArrayList<>();
            
            for(int i=0; i<size; i++)
            {
                TreeNode out=q1.poll();
                currentlevel.add(out.val);
                
                if(out.left != null)
                {
                    q1.add(out.left);
                    
                }
                
                if(out.right != null)
                {
                    q1.add(out.right);
                }
                
                
            }
           result.add(currentlevel); 
            
            
        }
        return result;
    }
}
