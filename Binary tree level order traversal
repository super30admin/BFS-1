# time complexity: O(n)
# space complexity: O(n)
# did it run on leetcode: yes
# any problem:

class Solution:
    def levelOrder(self, root: Optional[TreeNode]) -> List[List[int]]:
        result=[]
        if root==None:
            return None
        q=deque()
        q.append(root)
        while(len(q)>0):
            resulttemp=[]
            temp=len(q)
            for i in range(temp):
                tempnode=q.popleft()
                resulttemp.append(tempnode.val)
                
                if(tempnode.left!=None):
                    q.append(tempnode.left)

                if(tempnode.right!=None):
                    q.append(tempnode.right)
            
            
            result.append(resulttemp)
        return result
