Time: O(n)
Space: O(n)

class Solution {
    public List<Integer> rightSideView(TreeNode root) {
          List<Integer> r = new ArrayList<>();
        if (root == null) return r;
        Deque<TreeNode> dq = new ArrayDeque<>();
        dq.offer(root);
        TreeNode prev, cur;
        int size = 0;
        
        while (!dq.isEmpty()) {
            size = dq.size();
            prev = null;
            for (int i = 0; i < size; ++i) {
                cur = dq.poll();
                if (cur.left != null) dq.offer(cur.left);
                if (cur.right != null) dq.offer(cur.right);
                prev = cur;
            }
            r.add(prev.val);
        }
        return r; 
    }
}
