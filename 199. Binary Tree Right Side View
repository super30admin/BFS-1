Time complexity: O(n)
Space complexity: O(n)
Did this code submitted successfully on leetcode: Yes
Did you face any problem: No

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<Integer> rightSideView(TreeNode root) {
        List<Integer> res = new ArrayList<>();
        
        if(root == null)
            return res;
        
        Queue<TreeNode> q = new LinkedList<TreeNode>();
        q.add(root);
        
        int level = 0;
        
        while(!q.isEmpty()){

            int len = q.size();
            
            for(int i=0;i<len;i++){
                TreeNode node = q.remove();
                
                if (node.left != null) q.add(node.left);
                if (node.right != null) q.add(node.right);
                
                if(i==len-1)
                    res.add(node.val);
            }
        }
        
        return res;
    }
}
