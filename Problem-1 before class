/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
//Time: O(n)
//SPace: O(n)
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        if(root==null) return new ArrayList<>();
       
        List<List<Integer> > aList = new ArrayList<List<Integer>>();
       Queue<TreeNode> q=new LinkedList<TreeNode>();
        q.add(root);
        while(!q.isEmpty())
        {
        List<Integer> list=new ArrayList<Integer>();
            //tracks each level size
          int size=q.size();
            //for loop will keep traversal of the level everytime
            for(int i=0;i<size;i++)
            {
                
                TreeNode node=q.poll();
                list.add(node.val);
                if(node.left!=null)
                {
                    q.add(node.left);
                }
               if(node.right!=null)
                {
                    q.add(node.right);
                }
            }
             aList.add(new ArrayList<>(list));
        }
       
        return aList;
    }
}
