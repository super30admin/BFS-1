// Time Complexity: Time Complexity: O(n) -> Number of nodes in the tree
// Space Complexity: O(h) - > h -> height of the tree


class Solution{
    List<List<Integer>> res;
    public List<List<Integer>> levelOrder(TreeNode root){
        res = new ArrayList<>();
        if(root == null) return res;

        dfs(root, 0);

        return res;
    }

    public void dfs(TreeNode root, int level){
        //base case
        if(root == null) return;

        //logic
        if(level == res.size()){
            res.add(new ArrayList<>());
        }
        res.get(level).add(root.val);
        dfs(root.left, level + 1);
        //st.pop()
        dfs(root.right, level + 1);
    }


}
