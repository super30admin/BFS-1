/**
Time O(n) 
Space O(1) (assuming that output list does not contribute to space)
Leetcode yes
problem no

during each iteration of while loop we traverse all the nodes at the nodes at a particular level. And at each of these nodes
we push its left and right child in the queue so that we have the nodes of next level in our queue which we can traverse

 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        
        List<List<Integer>> solution  = new ArrayList<>();
        
        if(root == null)
            return solution;
        
        Queue<TreeNode> q = new LinkedList<>();
        q.add(root);
	
        
        while(q.size()!=0)
        {
            List<Integer> levelNodes = new ArrayList<>();
            int size = q.size();
            TreeNode temp;
            
            for(int i=0; i< size;i++)
            {
                temp = q.poll();
                if(temp.left!= null)
                    q.add(temp.left);
                if(temp.right!=null)
                    q.add(temp.right);
                levelNodes.add(temp.val);
            }
            
            solution.add(levelNodes);
            
        }
        
        return solution;
       
    }
}
