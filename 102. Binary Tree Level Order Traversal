Time complexity: O(n)
Space complexity: O(n)
Did this code submitted successfully on leetcode: Yes

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        
        List<List<Integer>> out = new ArrayList<>();
        
        if(root==null)
            return out;
        
        Queue<TreeNode> q = new LinkedList<>();
        
        q.add(root);
        
        int level = 0;
        
        while(!q.isEmpty()){
            out.add(new ArrayList<>());
            
            int len = q.size();
            
            for(int i=0;i<len;i++){
                TreeNode node = q.remove();
                
                out.get(level).add(node.val);
                
                if (node.left != null) q.add(node.left);
                if (node.right != null) q.add(node.right);
            }
            
            level++;
        }
        
        return out;
    }
}
