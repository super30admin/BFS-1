// time complexity : O(n)
 //space complexity : O(n)
 //successfully executed on leetCode
 //using BFS
class BinaryTreeLevelOrderTraversalBFS {
    public List<List<Integer>> levelOrder(TreeNode root) {
        List<List<Integer>> result = new ArrayList<>();
        if(root==null){
            return result;
        }        
        Queue<TreeNode> queue = new LinkedList<>();
        queue.add(root);
        while(!queue.isEmpty()){
            List<Integer> list= new ArrayList<>();
            int size= queue.size();

            for(int i=0; i<size;i++){
               TreeNode curr = queue.poll();
                list.add(curr.val);
                if(curr.left!=null){
                    queue.add(curr.left);
                }
                if(curr.right!=null){
                    queue.add(curr.right);
                }
            }
            result.add(list);
        }
        return result;
    }
}
